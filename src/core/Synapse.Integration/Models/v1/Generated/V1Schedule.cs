
/*
 * Copyright © 2022-Present The Synapse Authors
 * <p>
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* -----------------------------------------------------------------------
 * This file has been automatically generated by a tool
 * -----------------------------------------------------------------------
 */

namespace Synapse.Integration.Models
{

	/// <summary>
	/// Represents a V1Workflow schedule
	/// </summary>
	[DataContract]
	[Queryable]
	public partial class V1Schedule
		: Entity
	{

		/// <summary>
		/// The V1Schedule's activation type
		/// </summary>
		[DataMember(Name = "activationType", Order = 1)]
		[Description("The V1Schedule's activation type")]
		public virtual V1ScheduleType ActivationType { get; set; }

		/// <summary>
		/// The V1Schedule's status
		/// </summary>
		[DataMember(Name = "status", Order = 2)]
		[Description("The V1Schedule's status")]
		public virtual V1ScheduleStatus Status { get; set; }

		/// <summary>
		/// The V1Schedule's definition
		/// </summary>
		[DataMember(Name = "definition", Order = 3)]
		[Description("The V1Schedule's definition")]
		public virtual ScheduleDefinition Definition { get; set; }

		/// <summary>
		/// The id of the scheduled V1Workflow
		/// </summary>
		[DataMember(Name = "workflowId", Order = 4)]
		[Description("The id of the scheduled V1Workflow")]
		public virtual string WorkflowId { get; set; }

		/// <summary>
		/// The date and time the V1Schedule has last been suspended at
		/// </summary>
		[DataMember(Name = "suspendedAt", Order = 5)]
		[Description("The date and time the V1Schedule has last been suspended at")]
		public virtual DateTime? SuspendedAt { get; set; }

		/// <summary>
		/// The date and time the V1Schedule has been retired at
		/// </summary>
		[DataMember(Name = "retiredAt", Order = 6)]
		[Description("The date and time the V1Schedule has been retired at")]
		public virtual DateTime? RetiredAt { get; set; }

		/// <summary>
		/// The date and time the V1Schedule has been made obsolete at
		/// </summary>
		[DataMember(Name = "obsoletedAt", Order = 7)]
		[Description("The date and time the V1Schedule has been made obsolete at")]
		public virtual DateTime? ObsoletedAt { get; set; }

		/// <summary>
		/// The date and time at which the V1Schedule has last occured
		/// </summary>
		[DataMember(Name = "lastOccuredAt", Order = 8)]
		[Description("The date and time at which the V1Schedule has last occured")]
		public virtual DateTime? LastOccuredAt { get; set; }

		/// <summary>
		/// The date and time at which the scheduled V1Workflow has last completed
		/// </summary>
		[DataMember(Name = "lastCompletedAt", Order = 9)]
		[Description("The date and time at which the scheduled V1Workflow has last completed")]
		public virtual DateTime? LastCompletedAt { get; set; }

		/// <summary>
		/// The date and time at which the V1Schedule will next occur
		/// </summary>
		[DataMember(Name = "nextOccurenceAt", Order = 10)]
		[Description("The date and time at which the V1Schedule will next occur")]
		public virtual DateTime? NextOccurenceAt { get; set; }

		/// <summary>
		/// The total number of occurences
		/// </summary>
		[DataMember(Name = "totalOccurences", Order = 11)]
		[Description("The total number of occurences")]
		public virtual long TotalOccurences { get; set; }

    }

}
