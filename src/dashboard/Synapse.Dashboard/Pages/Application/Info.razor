@* 
    Copyright © 2022-Present The Synapse Authors
    <p>
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    <p>
    http://www.apache.org/licenses/LICENSE-2.0
    <p>
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*@

@page "/application/info"
@using Synapse.Dashboard.Features
@inherits StatefulComponent<V1ApplicationState>
@inject IBreadcrumbManager BreadcrumbService

<PageTitle>Application Info</PageTitle>

@if(applicationInfo != null)
{
    <div class="text-center mb-5">
        <img src="img/synapse-logo-black.png" height="150" alt="Synapse logo" class="mb-3">
        <div><h1>SYNAPSE</h1></div>
        <div><h4>Serverless Workflow Management System</h4></div>
    </div>

    <div class="container">
        <Expander Class="mb-3" IsExpanded="true">
            <Header><h5>General Info</h5></Header>
            <Body>
                <table class="table table-striped table-bordered my-3">
                    <tbody>
                        <tr>
                            <td>Name</td>
                            <td><span class="badge bg-secondary">@applicationInfo.Name</span></td>
                        </tr>
                        <tr>
                            <td>Version</td>
                            <td>
                                <a href="https://github.com/serverlessworkflow/synapse/releases" target="_blank"><span class="badge bg-primary">@applicationInfo.Version</span></a>
                            </td>
                        </tr>
                        <tr>
                            <td>Operational System</td>
                            <td><span class="badge bg-secondary">@applicationInfo.OSDescription</span></td>
                        </tr>
                        <tr>
                            <td>NET Framework</td>
                            <td><a href="https://dotnet.microsoft.com/en-us/download" target="_blank"><span class="badge bg-primary">@applicationInfo.FrameworkDescription</span></a></td>
                        </tr>
                        <tr>
                            <td>Environment</td>
                            <td><span class="badge bg-secondary">@applicationInfo.EnvironmentName</span></td>
                        </tr>
                        <tr>
                            <td>Serverless Workflow SDK</td>
                            <td><a href="https://github.com/serverlessworkflow/sdk-net" target="_blank"><span class="badge bg-warning">@applicationInfo.ServerlessWorkflowSdkVersion</span></a></td>
                        </tr>
                        <tr>
                            <td>Workflow Runtime</td>
                            <td><span class="badge bg-secondary">@applicationInfo.WorkflowRuntimeName</span></td>
                        </tr>
                        <tr>
                            <td>Supported Runtime Expression Languages</td>
                            <td>@((MarkupString)string.Join(',', applicationInfo.SupportedRuntimeExpressionLanguages.Select(l => $@"<span class=""badge bg-secondary"">{l}</span>")))</td>
                        </tr>
                        <tr>
                            <td>License</td>
                            <td><a href="https://raw.githubusercontent.com/serverlessworkflow/synapse/main/LICENSE" target="_blank">Apache 2.0</a></td>
                        </tr>
                        <tr>
                            <td>Copyright</td>
                            <td>Copyright © 2022-Present The Synapse Authors. All Rights Reserved.</td>
                        </tr>
                        <tr>
                            <td>Repository</td>
                            <td><a href="https://github.com/serverlessworkflow/synapse/" target="_blank">https://github.com/serverlessworkflow/synapse/</a></td>
                        </tr>
                        <tr>
                            <td>Website</td>
                            <td><a href="https://synapse-wfms.io/" target="_blank">https://synapse-wfms.io/</a></td>
                        </tr>
                    </tbody>
                </table>
            </Body>
        </Expander>
        <Expander Class="mb-3">
            <Header>
                    <h5>Environment Variables</h5>
            </Header>
            <Body>
                <table class="table table-striped table-bordered my-3">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var env in applicationInfo.EnvironmentVariables)
                {
                    <tr>
                        <td>@env.Key</td>
                        <td class="text-break">@env.Value</td>
                    </tr>
                }
            </tbody>
        </table>
            </Body>
        </Expander>
        <Expander Class="mb-3">
            <Header>
                 <h5>Plugins</h5>
            </Header>
            <Body>
                @if(applicationInfo.Plugins == null
                || !applicationInfo.Plugins.Any())
                {
                    <b class="text-warning">No plugins detected</b>
                }
                else
                {
                    foreach (var plugin in applicationInfo.Plugins)
                    {
                        <div class="border border-secondary rounded-2 my-3 p-3">
                            <Expander>
                                <Header><b>@plugin.Metadata.Name</b><span class="badge bg-secondary ms-2">@plugin.Metadata.Version</span><span class="badge bg-primary ms-2 ">@EnumHelper.Stringify(plugin.Metadata.Type)</span><span class="ms-2 bi @(plugin.IsLoaded ? "bi-check-circle text-success": "bi-slash-circle text-danger")"></span></Header>
                            <Body>
                                <table class="table table-striped table-bordered my-3">
                                    <tbody>
                                        <tr>
                                            <td>Type</td>
                                            <td><span class="badge bg-secondary">@EnumHelper.Stringify(plugin.Metadata.Type)</span></td>
                                        </tr>
                                        <tr>
                                            <td>Name</td>
                                            <td>@plugin.Metadata.Name</td>
                                        </tr>
                                        <tr>
                                            <td>Description</td>
                                            <td>@plugin.Metadata.Description</td>
                                        </tr>
                                        <tr>
                                            <td>Version</td>
                                            <td><span class="badge bg-secondary">@plugin.Metadata.Version</span></td>
                                        </tr>
                                        <tr>
                                            <td>Authors</td>
                                            <td>@plugin.Metadata.Authors</td>
                                        </tr>
                                        <tr>
                                            <td>Copyright</td>
                                            <td>@plugin.Metadata.Copyright</td>
                                        </tr>
                                        <tr>
                                            <td>Tags</td>
                                            <td>@((MarkupString)string.Join(',', plugin.Metadata.Tags.Select(l => $@"<span class=""badge bg-secondary"">{l}</span>")))</td>
                                        </tr>
                                                                            <tr>
                                            <td>Location</td>
                                            <td><span class="badge bg-secondary">@plugin.Location</span></td>
                                        </tr>
                                        <tr>
                                            <td>Loaded</td>
                                            <td><span class="badge bg-secondary">@plugin.IsLoaded</span></td>
                                        </tr>
                                         @if(plugin.Metadata.LicenseUri != null)
                                        {
                                            <tr>
                                                <td>License</td>
                                                <td><a href="@plugin.Metadata.LicenseUri" target="_blank">@plugin.Metadata.LicenseUri</a></td>
                                            </tr>
                                        }
                                        @if(plugin.Metadata.ReadmeUri != null)
                                        {
                                            <tr>
                                                <td>Readme</td>
                                                <td><a href="@plugin.Metadata.ReadmeUri" target="_blank">@plugin.Metadata.ReadmeUri</a></td>
                                            </tr> 
                                        }
                                        @if(plugin.Metadata.WebsiteUri != null)
                                        {
                                            <tr>
                                                <td>Website</td>
                                                <td><a href="@plugin.Metadata.WebsiteUri" target="_blank">@plugin.Metadata.WebsiteUri</a></td>
                                            </tr> 
                                        }
                                        @if(plugin.Metadata.RepositoryUri != null)
                                        {
                                            <tr>
                                                <td>Repository</td>
                                                <td><a href="@plugin.Metadata.RepositoryUri" target="_blank">@plugin.Metadata.RepositoryUri</a></td>
                                            </tr> 
                                        }
                                    </tbody>
                                </table>
                            </Body>
                        </Expander>
                        </div>
                    }
                }
            </Body>
        </Expander>
    </div>
    <br />
    <div class="row mt-5">
        <div class="col-3"></div>
        <div class="col-2">
            <div class="text-center">
                <img src="img/cncf-stacked-color.png" height="100" alt="CNCF logo" />
                <p class="mt-3">Synapse is a <a href="https://www.cncf.io/" target="_blank">Cloud Native Computing Foundation</a> project</p>
            </div>
        </div>
        <div class="col-2">
            <div class="text-center">
                <img src="img/serverlessworkflow-icon-color.png" height="100" alt="Serverless Workflow logo" />
                <p class="mt-3">Synapse is a runtime implementation of the <a href="https://github.com/serverlessworkflow/specification/" target="_blank">Serverless Workflow</a> spec</p>
            </div>
        </div>
        <div class="col-3">
            <div class="text-center">
                <img src="img/github-logo.png" height="100" alt="Github logo" />
                <p class="mt-3">
                    A question, an idea, wanting to contribute?
                    <br />
                    Join in the fun on <a href="https://github.com/serverlessworkflow/synapse/blob/main/README.md" target="_blank">Github</a>! 
                    New users are always welcome!
                </p>
            </div>
        </div>
        <div class="col-2"></div>
    </div>

}
else
{
    <Loader />
}

@code {

    protected IDisposable? subscription = null!;
    private V1ApplicationInfo applicationInfo = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await this.BreadcrumbService.Use(Breadcrumbs.About);
        this.subscription = this.Feature
            .Subscribe(applicationState =>
            {
                this.applicationInfo = applicationState.Info!;
                this.StateHasChanged();
            });
        this.Dispatcher.Dispatch(new GetV1ApplicationInfo());
    }

    protected override void Dispose(bool disposing)
    {
        base.Dispose(disposing);
        if (disposing)
        {
            this.subscription?.Dispose();
            this.subscription = null;
        }
    }

}
