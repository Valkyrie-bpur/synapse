@* 
    Copyright © 2022-Present The Synapse Authors

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*@

@page "/correlations/{correlationId}"
@using Microsoft.AspNetCore.SignalR.Client
@using Neuroglia.Data.Flux
@using Neuroglia.Serialization
@using Newtonsoft.Json
@using System.Text
@using Synapse.Integration.Events.WorkflowInstances
@using Newtonsoft.Json.Serialization
@implements IDisposable
@inject IStore Store
@inject IDispatcher Dispatcher
@inject ISynapseManagementApi SynapseApi
@inject IMonacoEditorHelper MonacoEditorHelper
@inject IBreadcrumbManager BreadcrumbService
@inject IJsonSerializer Serializer
@inject IJSRuntime JS
@inject HubConnection HubConnection
@inject NavigationManager NavigationManager

<PageTitle>Correlation @correlation?.Id</PageTitle>

@if (correlation != null)
{
    var highlightedAttributes = correlation.Conditions.SelectMany(c => c.Filters.SelectMany(f => f.Attributes.Select(a => a.Key).Union(f.CorrelationMappings.Select(a => a.Key)))).Distinct();
    <div class="container-fluid h-100">
        <div class="row">
            <div class="col-6">

                <h4 class="mb-2">Information</h4>
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <td>Id</td>
                            <td>@correlation.Id</td>
                        </tr>
                           <tr>
                            <td>Created at</td>
                            <td>@correlation.CreatedAt</td>
                        </tr>
                           <tr>
                            <td>Last Modified</td>
                            <td>@correlation.LastModified</td>
                        </tr>
                        <tr>
                            <td>Lifetime</td>
                            <td><span class="badge bg-secondary">@EnumHelper.Stringify(correlation.Lifetime)</span></td>
                        </tr>
                        <tr>
                            <td>Condition Type</td>
                            <td><span class="badge bg-secondary">@EnumHelper.Stringify(correlation.ConditionType)</span></td>
                        </tr>
                    </tbody>
                </table>

                <h4 class="mb-2">Conditions</h4>
                @foreach (var condition in correlation.Conditions)
                {
                    <div class="border border-secondary rounded-2 p-3 mb-3">
                        @foreach(var filter in condition.Filters)
                        {
                            <h5>Attributes</h5>
                            @if(filter.Attributes != null
                            && filter.Attributes.Any())
                            {
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Attribute</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach(var attr in filter.Attributes)
                                        {
                                            <tr>
                                                <td>@attr.Key</td>
                                                <td><span class="badge bg-secondary">@attr.Value</span></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                 <b>None</b>
                            }
                            
                            <h5>Correlation Mappings</h5>
                            @if(filter.CorrelationMappings != null
                                && filter.CorrelationMappings.Any())
                            {
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Attribute</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach(var mapping in filter.CorrelationMappings)
                                        {
                                            <tr>
                                                <td>@mapping.Key</td>
                                                <td><span class="badge bg-secondary">@mapping.Value</span></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <b>None</b>
                            }
                        }
                    </div>
                }
            </div>
            <div class="col-6">
                <h4 class="mb-2">Contexts</h4>
                @foreach (var context in correlation.Contexts)
                {
                    <div class="border border-secondary rounded-2 p-3 mb-3">
                        <Expander>
                            <Header>
                                <h5>@context.Id</h5>
                            </Header>
                            <Body>
                                <h5>Information</h5>
                                <table class="table table-striped">
                                    <tbody>
                                        <tr>
                                            <td>Id</td>
                                            <td>@context.Id</td>
                                        </tr>
                                           <tr>
                                            <td>Created at</td>
                                            <td>@context.CreatedAt</td>
                                        </tr>
                                           <tr>
                                            <td>Last Modified</td>
                                            <td>@context.LastModified</td>
                                        </tr>
                                    </tbody>
                                </table>
                                <h5>Correlation Mappings</h5>
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Attribute</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach(var mapping in context.Mappings)
                                        {
                                            <tr>
                                                <td>@mapping.Key</td>
                                                <td><span class="badge bg-warning">@mapping.Value</span></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <h5>Correlated Events</h5>
                                @foreach(var e in context.PendingEvents)
                                {
                                     <table class="table table-striped table-bordered">
                                        <tbody>
                                            @foreach(var attr in e.Attributes)
                                            {
                                                <tr>
                                                    <td>@attr.Key</td>
                                                    <td><span class="badge bg-@(highlightedAttributes.Contains(attr.Key) ? "warning" : "secondary")">@attr.Value</span></td>
                                                </tr>
                                            }
                                            <tr>
                                                <td>data</td>
                                                <td><pre class="text-white fw-bold p-1 bg-secondary">@JsonConvert.SerializeObject(e.Data, Formatting.Indented)</pre></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                }
                            </Body>
                        </Expander>
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <Loader />
}
@code
{

    [Parameter] public string CorrelationId { get; set; } = null!;
    protected string correlationId = null!;
    protected V1Correlation? correlation = null;
    protected IFeature<V1CorrelationCollectionState> correlationCollectionFeature = null!;
    protected IDisposable correlationSubscription = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        this.correlationCollectionFeature = this.Store.GetFeature<V1CorrelationCollectionState>();
        this.correlationSubscription = this.correlationCollectionFeature
            .Subscribe(correlations =>
            {
                this.correlation = correlations.FirstOrDefault(wf => wf.Id == this.CorrelationId);
                this.StateHasChanged();
            });
        await this.BreadcrumbService.Use(Breadcrumbs.Correlations);
        await this.BreadcrumbService.AddItem(new BreadcrumbItem(this.CorrelationId.ToString(), $"/correlations/{this.CorrelationId}"));
    }

    protected override async Task OnParametersSetAsync()
    {
        if (this.CorrelationId != this.correlationId)
        {
            this.Dispatcher.Dispatch(new GetV1CorrelationById(this.CorrelationId));
            this.correlationId = this.CorrelationId;
        }
    }

    public virtual void Dispose()
    {
        this.correlationSubscription?.Dispose();
    }

}