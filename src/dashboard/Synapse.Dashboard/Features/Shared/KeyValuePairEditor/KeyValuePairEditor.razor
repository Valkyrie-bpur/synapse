@namespace Synapse.Dashboard

<tr>
    <td>
        <input type="text" value="@key" placeholder="Key" class="form-control" @onchange="e => OnPropertyChanged((editor) => editor.key = (string?)e.Value ?? string.Empty)" />
    </td>
    <td>
        <input class="form-control" placeholder="Value" type="text" value="@value" @onchange="e => OnPropertyChanged((editor) => editor.value = (string?)e.Value ?? string.Empty)" />
    </td>
    <td>
        <button class="btn btn-outline-dark" type="button" @onclick="OnAddClicked"><small class="bi bi-plus-circle"></small></button>
    </td>
</tr>

@code {
    private string key = "";
    private string value = "";
    [Parameter] public KeyValuePair<string, string>? Kvp { get; set; }
    [Parameter] public EventCallback<KeyValuePair<string, string>> OnAdd { get; set; }
    [Parameter] public EventCallback<KeyValuePair<string, string>> OnChange { get; set; }

    protected override void OnParametersSet()
    {
        if (this.Kvp.HasValue && (this.Kvp.Value.Key != this.key || this.Kvp.Value.Value != this.value))
        {
            this.key = this.Kvp.Value.Key;
            this.value = this.Kvp.Value.Value;
        }
    }

    private void OnPropertyChanged(Action<KeyValuePairEditor> patch)
    {
        patch(this);
        this.OnChange.InvokeAsync(new KeyValuePair<string, string>(this.key, this.value));
    }

    private void OnAddClicked()
    {
        this.OnAdd.InvokeAsync(new KeyValuePair<string, string>(this.key, this.value));
        this.key = "";
        this.value = "";
    }
}
